<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Brucetg&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-29T16:43:16.902Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Brucetg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker 部署 SDN（OpenDayLight）</title>
    <link href="http://yoursite.com/2018/04/29/Docker-%E9%83%A8%E7%BD%B2-SDN%EF%BC%88OpenDayLight%EF%BC%89/"/>
    <id>http://yoursite.com/2018/04/29/Docker-部署-SDN（OpenDayLight）/</id>
    <published>2018-04-29T15:43:18.000Z</published>
    <updated>2018-04-29T16:43:16.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装Docker，我的之前已经安装好了："><a href="#1-安装Docker，我的之前已经安装好了：" class="headerlink" title="1. 安装Docker，我的之前已经安装好了："></a>1. 安装Docker，我的之前已经安装好了：</h2><p>   安装软件包apt-transport-https，使APT系统能够被https解析</p><pre><code>sudo apt-get install apt-transport-https</code></pre><p>   添加Docker repository key到本地keychain</p><pre><code>sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9</code></pre><p>   添加docker软件仓库到软件源，升级软件源，安装lxc-docker包</p><pre><code>sudo sh -c &quot;echo deb https://get.docker.com/ubuntu docker main &gt; /etc/apt/sources.list.d/docker.list&quot;sudo apt-get updatesudo apt-get install lxc-docker</code></pre><h2 id="2-配置阿里云Docker镜像加速器"><a href="#2-配置阿里云Docker镜像加速器" class="headerlink" title="2. 配置阿里云Docker镜像加速器"></a>2. 配置阿里云Docker镜像加速器</h2><p>   由于某些原因国内下载镜像速度非常慢，慢到了无法忍受的地步，那就只好另寻它法了，这里我们采用阿里云提供的Docker镜像加速器。</p><p>   浏览器访问：<a href="https://dev.aliyun.com/search.html" target="_blank" rel="noopener">https://dev.aliyun.com/search.html</a>，打开 开发者平台 – 管理中心 – 镜像加速器 。可以看到 “您的专属加速器地址” 即 <a href="https://xxxxxxx.mirror.aliyuncs.com" target="_blank" rel="noopener">https://xxxxxxx.mirror.aliyuncs.com</a> 。</p><p>   如下图所示：<br>    <img src="https://s1.ax1x.com/2018/04/30/CGYaM4.png" alt=""></p><p>   按提示配置即可，速度比之前快的不要不要的。</p><h2 id="3-下载镜像到本地（Ubuntu-14-04）"><a href="#3-下载镜像到本地（Ubuntu-14-04）" class="headerlink" title="3.下载镜像到本地（Ubuntu 14.04）:"></a>3.下载镜像到本地（Ubuntu 14.04）:</h2><pre><code>sudo docker pull ubuntu:14.04</code></pre><p>   启动Ubuntu 14.04：</p><pre><code>sudo docker run -i -t ubuntu:14.04 /bin/bash</code></pre><p>创建的Docker镜像如果不包含ifconfig、netstat等工具，需要自行安装，执行以下命令安装即可（在docker镜像中执行）：</p><pre><code>apt-get updateapt-get install net-tools</code></pre><h2 id="4-安装基本依赖："><a href="#4-安装基本依赖：" class="headerlink" title="4.安装基本依赖："></a>4.安装基本依赖：</h2><p> 安装git：  </p><pre><code>apt-get install git</code></pre><p> 安装wget：</p><pre><code>apt-get install wget</code></pre><p>安装Oracle JDK（OpenDaylight 使用Java语言开发）：</p><pre><code>wget http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-linux-x64.tar.gz?AuthParam=1514528589_ce87a553f807b80cb2ef418629984734</code></pre><p>（注：上述URL中AuthParam每次均会改变，如果不能下载请自行去官网获取最新链接）</p><pre><code>ls -al</code></pre><p> <img src="https://s1.ax1x.com/2018/04/30/CGY7Jf.png" alt=""></p><p>将文件重命名：</p><pre><code>mv jdk-8u151-linux-x64.tar.gz? AuthParam=1514528589_ce87a553f807b80cb2ef418629984734 jdk-8u151-linux-x64.tar.gz</code></pre><p>  解压：</p><pre><code>tar -zxvf  jdk-8u151-linux-x64.tar.gz</code></pre><p>  将其移动到 /usr目录下，方便管理</p><pre><code>mv jdk1.8.0_151 /usr/jdk1.8.0_151</code></pre><p>  安装vim：  </p><pre><code>apt-get install vim</code></pre><p>  编辑 .bashrc  ：</p><pre><code>vim ~/.bashrc</code></pre><p>  在尾部添加如下：</p><pre><code>JAVA_HOME=/usr/jdk1.8.0_151JRE_HOME=$JAVA_HOME/jreJAVA_BIN=$JAVA_HOME/binCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/binexport JAVA_HOME JRE_HOME PATH CLASSPATH</code></pre><p>  为了使配置生效，执行   </p><pre><code>source ~/.bashrc</code></pre><p>  验证JDK是否安装成功： </p><pre><code>java -version</code></pre><p>  <img src="https://s1.ax1x.com/2018/04/30/CGYqSS.png" alt=""></p><h2 id="5-安装Maven（OpenDaylight-使用Maven进行包管理，并且要求Maven3-1-1版本以上）："><a href="#5-安装Maven（OpenDaylight-使用Maven进行包管理，并且要求Maven3-1-1版本以上）：" class="headerlink" title="5.安装Maven（OpenDaylight 使用Maven进行包管理，并且要求Maven3.1.1版本以上）："></a>5.安装Maven（OpenDaylight 使用Maven进行包管理，并且要求Maven3.1.1版本以上）：</h2><pre><code>wget http://ftp.wayne.edu/apache/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gztar zxvf apache-maven-3.5.2-bin.tar.gzmv apache-maven-3.5.2 /usr/apache-maven-3.5.2</code></pre><hr><pre><code>vim ~/.bashrc</code></pre><p>  在末尾追加：</p><pre><code>export MAVEN_HOME=/usr/apache-maven-3.5.2export PATH=${PATH}:${MAVEN_HOME}/bin</code></pre><p>  保存后，执行  </p><pre><code>source ~/.bashrc</code></pre><p>  即可。</p><p>  查看是否安装成功：</p><pre><code>mvn -version</code></pre><p>  <img src="https://s1.ax1x.com/2018/04/30/CGt9YV.png" alt=""></p><p>  克隆项目：</p><pre><code>git clone https://github.com/sdnhub/SDNHub_Opendaylight_Tutorial.git</code></pre><p>  切换到项目目录：</p><pre><code>cd SDNHub_Opendaylight_Tutorial</code></pre><p>  开始编译：</p><pre><code>mvn install -nsu</code></pre><p>  报错：</p><p>  <img src="https://s1.ax1x.com/2018/04/30/CGtFlF.png" alt=""></p><p>  解决方案：</p><pre><code>wget -q -O - https://raw.githubusercontent.com/opendaylight/odlparent/master/settings.xml &gt; ~/.m2/settings.xml</code></pre><p>  重新编译：  </p><pre><code>mvn install -nsu</code></pre><p>  安装成功：</p><p>  <img src="https://s1.ax1x.com/2018/04/30/CGtAOJ.md.png" alt=""></p><h2 id="6-将制作好的容器打包成Docker镜像，并提交到Docker-Hub"><a href="#6-将制作好的容器打包成Docker镜像，并提交到Docker-Hub" class="headerlink" title="6.将制作好的容器打包成Docker镜像，并提交到Docker Hub"></a>6.将制作好的容器打包成Docker镜像，并提交到Docker Hub</h2><p>  查看所有容器：</p><pre><code>sudo docker ps -asudo docker commit d20d057bdfda sdn_opendaylight:1.0</code></pre><p>  （注： commit后跟的是容器id）</p><p>  查看镜像：  </p><pre><code>sudo docker images</code></pre><p>  <img src="https://s1.ax1x.com/2018/04/30/CGtVm9.png" alt=""></p><p>  镜像提交到Docker Hub，需提前申请DockerHub账号：‘</p><p>  給存在于本地的镜像打标签，要带上dockerhub 用户名（如果最后不带冒号加版本，就默认为 :lastest版本）</p><pre><code>sudo docker tag sdn_opendaylight:1.0 brucetg/sdn_opendaylight</code></pre><p>  登陆DockerHub</p><pre><code>sudo docker login</code></pre><p>  输入正确的用户名和密码即可。</p><p>  提交到 DockerHub：</p><pre><code>sudo docker push brucetg/sdn_opendaylight</code></pre><h2 id=""><a href="#" class="headerlink" title="  "></a>  <img src="https://s1.ax1x.com/2018/04/30/CGteT1.png" alt=""></h2><p>  <img src="https://s1.ax1x.com/2018/04/30/CGtuY6.png" alt=""></p><p>  启动：（在SDNHub_Opendaylight_Tutorial目录中执行以下命令）</p><pre><code>cd distribution/opendaylight-karaf/target/assembly./bin/karaf</code></pre><p>  <img src="https://s1.ax1x.com/2018/04/30/CGtKfK.md.png" alt=""></p><hr><p>  <img src="https://s1.ax1x.com/2018/04/30/CGtQSO.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装Docker，我的之前已经安装好了：&quot;&gt;&lt;a href=&quot;#1-安装Docker，我的之前已经安装好了：&quot; class=&quot;headerlink&quot; title=&quot;1. 安装Docker，我的之前已经安装好了：&quot;&gt;&lt;/a&gt;1. 安装Docker，我的之前已经安
      
    
    </summary>
    
    
      <category term="Docker、SDN" scheme="http://yoursite.com/tags/Docker%E3%80%81SDN/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/04/27/hello-world/"/>
    <id>http://yoursite.com/2018/04/27/hello-world/</id>
    <published>2018-04-27T15:59:14.234Z</published>
    <updated>2018-04-27T16:01:11.591Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
